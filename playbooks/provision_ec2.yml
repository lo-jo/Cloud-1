# Playbook to provision EC2 instance on AWS
---
- name: Provision EC2 Instance on AWS
  hosts: localhost
  gather_facts: false
  # become: true # Run tasks with root privileges

  vars:
    ec2_name: cloud-1-test
    key_name: aws_cloud1_keypair  # Key name for SSH
    key_file_path: "~/.ssh/aws_cloud1_keypair.pem"  # Path to store the private key locally
    region: eu-west-3
    image: ami-04a92520784b93e73  # Ubuntu 24.04 LTS AMI
    instance_type: t2.micro
    sec_group: "test-group"
    hosts_ini_file: "../hosts.ini"

  tasks:
    - name: Include the encrypted AWS credentials
      include_vars:
        file: "../group_vars/all/pass.yml"
        name: aws_creds
      no_log: true  # Hide sensitive info from logs

    - name: Set AWS access key environment variable
      ansible.builtin.set_fact:
        AWS_ACCESS_KEY_ID: "{{ aws_creds.ec2_access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_creds.ec2_secret_key }}"
      no_log: true

    # - name: Verify AWS credentials are set
    #   debug:
    #     msg: "AWS_ACCESS_KEY_ID is {{ AWS_ACCESS_KEY_ID }}"

    - name: Create SSH key pair and save the private key locally
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
        aws_access_key: "{{ aws_creds.ec2_access_key }}"
        aws_secret_key: "{{ aws_creds.ec2_secret_key }}"
      register: keypair_info

    - name: Save the private key to local file
      copy:
        content: "{{ keypair_info.key.private_key }}"  # The private key from AWS
        dest: "{{ key_file_path }}"  # Path to save the private key
        mode: '0600'  # Ensure the key is saved with secure permissions

    - name: Create security group
      amazon.aws.ec2_security_group:
        name: "{{ sec_group }}"
        description: Security group for EC2 instance
        region: "{{ region }}"
        aws_access_key: "{{ aws_creds.ec2_access_key }}"
        aws_secret_key: "{{ aws_creds.ec2_secret_key }}"
        rules:
          - proto: tcp
            ports: 22
            cidr_ip: 0.0.0.0/0

    - name: Provision an EC2 instance
      amazon.aws.ec2_instance:
        name: "{{ ec2_name }}"
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        security_group: "{{ sec_group }}"
        aws_access_key: "{{ aws_creds.ec2_access_key }}"
        aws_secret_key: "{{ aws_creds.ec2_secret_key }}"
        image_id: "{{ image }}"
        wait: yes
        region: "{{ region }}"
        network:
          assign_public_ip: true
        count: 1
      register: ec2_instance

    - name: Print instance details
      debug:
        var: ec2_instance

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ ec2_instance.instances[0].public_ip_address }}"
        port: 22
        state: started
        delay: 15
        timeout: 300
  
    # - name: Add EC2 instance to dynamic inventory
    #   add_host:
    #     name: "{{ ec2_instance.instances[0].public_ip_address }}"
    #     groups: webservers
    #     ansible_user: ubuntu
    #     ansible_ssh_private_key_file: ~/.ssh/aws_cloud1_keypair

    - name: Add EC2 instance to hosts.ini file
      lineinfile:
        path: "{{ hosts_ini_file }}"
        line: "server1 ansible_host={{ ec2_instance.instances[0].public_ip_address }} ansible_user=ubuntu ansible_ssh_private_key_file={{ key_file_path }}"
        create: yes  # Create the file if it does not exist
        state: present